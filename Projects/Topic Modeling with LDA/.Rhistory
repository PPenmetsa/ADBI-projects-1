}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(clus_dic[[1]])
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
print(clus_dic[[i]])
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(clus_dic[[1]])
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
clus_dic[[i]] < c(clus_dic[[i]],i)
print(clus_dic[[i]])
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(clus_dic[[1]])
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
clus_dic[[i]] < c(clus_dic[[i]],1)
print(clus_dic[[i]])
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(clus_dic[[1]])
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(clus_dic[[1]])
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(length(clus_dic[[1]]))
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(max(clus_dic[[1]]))
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
}
}
purity(clusters[[1]],labels)
labels <- rep(1:10, each=1000)
z <- list()
z <- c(z,1)
z <- c(z,2)
z <- c(z,3)
print(z)
labels <- rep(1:10, each=1000)
z <- c()
z <- c(z,1)
z <- c(z,2)
z <- c(z,3)
print(z)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- c()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(max(clus_dic[[1]]))
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
}
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- c()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
print(clus_id)
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(max(clus_dic[[1]]))
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
}
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- c()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
print(clus_dic[[10]])
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(max(clus_dic[[1]]))
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
}
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
print(i)
clus_dic[[i]] <- c()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
print(clus_dic[[10]])
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(max(clus_dic[[1]]))
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
}
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
print(i)
clus_dic[[i]] <- c()
print(clus_dic[[i]])
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
print(clus_dic[[10]])
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(max(clus_dic[[1]]))
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
}
}
purity(clusters[[1]],labels)
labels <- rep(1:10, each=1000)
z <- list()
z <- c(z,1)
z <- c(z,2)
z <- c(z,3)
print(z)
labels <- rep(1:10, each=1000)
z <- list()
z <- c(z,1)
z <- c(z,2)
z <- c(z,3)
print(max(z))
labels <- rep(1:10, each=1000)
z <- list()
z <- c(z,1)
z <- c(z,2)
z <- c(z,3)
print(max(unlist(z)))
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(max(unlist(clus_dic[[1]])))
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
}
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(names(sort(-table(clus_dic[[1]])))[1])
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
}
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(names(sort(-table(unlist(clus_dic[[1]]))))[1])
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
}
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(names(sort(-table(unlist(clus_dic[[1]]))))[1])
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
mode = names(sort(-table(unlist(clus_dic[[i]]))))[1]
freq = sum(unlist(clus_dic[[i]]) == mode)
print(freq)
}
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(names(sort(-table(unlist(clus_dic[[1]]))))[1])
total = 0
for(i in 1:n_clusters){
total = total + length(clus_dic[[i]])
mode = names(sort(-table(unlist(clus_dic[[i]]))))[1]
freq = sum(unlist(clus_dic[[i]]) == mode)
}
print(total)
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(names(sort(-table(unlist(clus_dic[[1]]))))[1])
total = 0
for(i in 1:n_clusters){
mode = names(sort(-table(unlist(clus_dic[[i]]))))[1]
freq = sum(unlist(clus_dic[[i]]) == mode)
total = total + freq
}
print(total/length(clus_ass))
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
print(names(sort(-table(unlist(clus_dic[[1]]))))[1])
total = 0
for(i in 1:n_clusters){
mode = names(sort(-table(unlist(clus_dic[[i]]))))[1]
freq = sum(unlist(clus_dic[[i]]) == mode)
total = total + freq
}
return(total/length(clus_ass))
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
total = 0
for(i in 1:n_clusters){
mode = names(sort(-table(unlist(clus_dic[[i]]))))[1]
freq = sum(unlist(clus_dic[[i]]) == mode)
total = total + freq
}
return(total/length(clus_ass))
}
purity(clusters[[1]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
total = 0
for(i in 1:n_clusters){
mode = names(sort(-table(unlist(clus_dic[[i]]))))[1]
freq = sum(unlist(clus_dic[[i]]) == mode)
total = total + freq
}
return(total/length(clus_ass))
}
purity(clusters[[2]],labels)
purity = function(clus_ass, labels){
#Create dictionary of cluster assignments
n_clusters = length(unique(clus_ass))
clus_dic <- vector(mode = "list", length = n_clusters)
names(clus_dic) <- c(1:n_clusters)
for(i in 1:n_clusters){
clus_dic[[i]] <- list()
}
for(doc in seq(1,length(clus_ass),1)){
clus_id = clus_ass[doc]
clus_dic[[clus_id]] <- c(clus_dic[[clus_id]], labels[doc])
}
total = 0
for(i in 1:n_clusters){
mode = names(sort(-table(unlist(clus_dic[[i]]))))[1]
freq = sum(unlist(clus_dic[[i]]) == mode)
total = total + freq
}
return(total/length(clus_ass))
}
labels <- rep(1:10, each=1000)
clusters <- vector(mode="list",length=10)
count = 1
for(lda_model in lda_models){
pos_prob = lda_model@gamma
max_pos_prob <- apply(pos_prob, 1, function(x) which(x==max(x))[1]) #If multiple topics with max prob, choose the one with lower index
clusters[[count]] <- max_pos_prob
count = count + 1
}
clusters[[2]][3]
purities <- c()
for(i in 1:10){
purities <- c(purities, purity(clusters[[i]],labels))
}
plot(seq(10,100,10),purities,xlab="No. of Topics",ylab="Purity",type="o",axes=FALSE)
axis(1,seq(10,100,10))
axis(2,seq(min(lcp_coh),max(lcp_coh),0.1))
purities <- c()
for(i in 1:10){
purities <- c(purities, purity(clusters[[i]],labels))
}
plot(seq(10,100,10),purities,xlab="No. of Topics",ylab="Purity",type="o",axes=FALSE)
axis(1,seq(10,100,10))
axis(2,seq(min(lcp_coh),max(lcp_coh),0.01))
purities <- c()
for(i in 1:10){
purities <- c(purities, purity(clusters[[i]],labels))
}
plot(seq(10,100,10),purities,xlab="No. of Topics",ylab="Purity",type="o",axes=FALSE)
axis(1,seq(10,100,10))
axis(2,seq(min(purities),max(purities),0.1))
purities <- c()
for(i in 1:10){
purities <- c(purities, purity(clusters[[i]],labels))
}
plot(seq(10,100,10),purities,xlab="No. of Topics",ylab="Purity",type="o",axes=FALSE)
axis(1,seq(10,100,10))
axis(2,seq(min(purities),max(purities),0.01))
purities <- c()
for(i in 1:10){
purities <- c(purities, purity(clusters[[i]],labels))
}
plot(seq(10,100,10),purities,xlab="No. of Topics",ylab="Purity",type="o",axes=FALSE)
axis(1,seq(10,100,10))
axis(2,seq(min(purities),max(purities)+0.1,0.01))
purities <- c()
for(i in 1:10){
purities <- c(purities, purity(clusters[[i]],labels))
}
plot(seq(10,100,10),purities,xlab="No. of Topics",ylab="Purity",type="o",axes=FALSE)
axis(1,seq(10,100,10))
axis(2,seq(round(min(purities),2),max(purities)+0.1,0.01))
purities <- c()
for(i in 1:10){
purities <- c(purities, purity(clusters[[i]],labels))
}
plot(seq(10,100,10),purities,xlab="No. of Topics",ylab="Purity",type="o",axes=FALSE)
axis(1,seq(10,100,10))
axis(2,seq(round(min(purities)-0.1,2),max(purities)+0.1,0.01))
purities <- c()
for(i in 1:10){
purities <- c(purities, purity(clusters[[i]],labels))
}
plot(seq(10,100,10),purities,xlab="No. of Topics",ylab="Purity",type="o",axes=FALSE)
axis(1,seq(10,100,10))
axis(2,seq(round(min(purities)-0.1,2),max(purities)+0.2,0.01))
